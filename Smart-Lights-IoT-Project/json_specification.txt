{
    "device-name": "SmartBulbs",
    "device-type": "Lightbulb",
    "buffers-count": 2,
    //How the buffers should look like
    "input-buffers":{
        //Via which we simulate the recording of sound
        "MICROPHONE":{
            "token-delimitators": "", //Symbol that separates the tokens in the buffer
            "protocol": "HTTP", // The protocol used to communicate with this buffer
            //The Microphone Input buffer will be activated via a request throught this api
            "prefix": "http://127.0.0.0:9080/microphone/",
            //ptz? + these:
            "buffer-tokens":[//
            {
                //Could either be 
                // /settings - when we want access to microphone settings,
                // /patterns - when we register a new pattern or need to see all the recorded patterns
                "name":"Microphone Action",
                "description":"Input that dictates what option to choose for the microphone",
                "token-type":"string", // 
                "byte-size":8, //Maximum size of the token
                //Must be an upperCase Word
                "regex-rule": "settings|patterns",
                //This is required since it is the action required to happen 
                "optional": false 
            },
            {
                "name":"Micropohne Request Param Key",
                //Basically each of the sound patterns described consist of a string 
                //Could Also be sensitivity=value as a token
                // Could also be newPattern=patternValue
                "description": "",                
                "token-type":"string",
                "byte-size":256,
                //each "1" represents a clap or a sound, and "0" represents 0.5 seconds of silence 
                //E.g: https://localhost:8080/micropohne?record=100101  translatest to CLAP-1second silence-CLAP-CLAP
                //E.g: https://localhost:8080/micropohne/settings?sensitivity=3 set sensitivity to 3
                //E.g: https://localhost:8080/micropohne/settings?newPattern=10011&mapsTo=START_LIGHTS_PATTERN&colorPattern=RED-3-BLUE-2-GREEN-2
                // register pattern 10011 as a START_LIGHTS_PATTERN with pattern RED 3s, BLUE 2s, GREEN2s
                "regex-rule": "^&newPattern|^&mapsTo|^&color|^&colorPattern|^&sensitivity|^&record", 
                //"^=1([0,1]*)|^=[1-5]|^=([A-Z]*_)+[A-Z]+|^=([A-Z]+(_\d)*)+(_[A-Z]+_\d)*",
                "optional": false
            },
            {
                "name":"Micropohne Request Param Value",
                "description": "",                
                "token-type":"string",
                "byte-size":256,                
                "regex-rule": "^=1([0,1]*)|^=[1-5]|^=([A-Z]*_)+[A-Z]+|^=([A-Z]+(_\d)*)+(_[A-Z]+_\d)*",
                "optional": false
            }]   
        },
        "PHOTORESISTOR":{
            "token-delimitators": "", //Symbol that separates the tokens in the buffer
            "protocol": "HTTP", // The protocol used to communicate with this buffer
            //The Microphone Input buffer will be activated via a request throught this api
            "prefix": "http://127.0.0.0:9080/photoresistor/",
             "buffer-tokens":[//
            {
                "name":"Bulb state param keys",
                //Basically each of the sound patterns described consist of a string 
                //Could Also be sensitivity=value as a token
                // Could also be newPattern=patternValue
                "description": "",                
                "token-type":"string",
                "byte-size":256,
                //brightness = the recorded brightness value from the photoresistor
                //presence = motion sensor which specifies the detection of a person nearby
                "regex-rule": "^&brightness|^&presesnce", 
                "optional": false
            },
            {
                "name":"Bulb Request Param Value",
                "description": "",                
                "token-type":"string",
                "byte-size":256,                
                "regex-rule": "^=[0,1]*|^=[0,1]",
                "optional": false
            }]   
        },
        MIRCOPHONE-MQTT:{
            "token-delimitators": "", //Symbol that separates the tokens in the buffer
            "protocol": "MQTT", // The protocol used to communicate with this buffer
            //The Microphone Input buffer will be activated via a request throught this api
            "prefix": "tcp://localhost:1883",
             "buffer-tokens":[//
            {
                "name":"Recorded Sound Pattern",
                //Basically each of the sound patterns described consist of a string 
                //Could Also be sensitivity=value as a token
                // Could also be newPattern=patternValue
                "description": "",                
                "token-type":"json",
                "byte-size":256,
                //brightness = the recorded brightness value from the photoresistor
                //presence = motion sensor which specifies the detection of a person nearby
                "regex-rule": "\{'record'\:[0-1]*\}", 
                "optional": false
            }]
        },
        PHOTORESISTOR-MQTT:{
            "token-delimitators": "", //Symbol that separates the tokens in the buffer
            "protocol": "MQTT", // The protocol used to communicate with this buffer
            //The Microphone Input buffer will be activated via a request throught this api
            "prefix": "tcp://localhost:1883",
             "buffer-tokens":[//
            {
                "name":"Recorded Birghtness & Presence",
                //Basically each of the sound patterns described consist of a string 
                //Could Also be sensitivity=value as a token
                // Could also be newPattern=patternValue
                "description": "",                
                "token-type":"json",
                "byte-size":256,
                //brightness = the recorded brightness value from the photoresistor
                //presence = motion sensor which specifies the detection of a person nearby
                "regex-rule": "\{'brightness'\:[0-100]\,'presence'\:[0-1]\}", 
                "optional": false
            },
            {
                "name":"Bulb Request Param Value",
                "description": "",                
                "token-type":"string",
                "byte-size":256,                
                "regex-rule": "^=[0,1]*|^=[0,1]",
                "optional": false
            }
            ]   

    },
    "output-buffers":{
        "BULB_STATE":{
            "token-delimitators": " ",
            "protocol": "HTTP",
            "prefix": "http://localhost:9080/bulb", //Retrieve the current bulb state configuration
            "caller":"local", // Remote or Local. The caller variable describes who runs this buffer. Either
            "buffer-tokens":[]
        },
        "BUZZER":{
            "token-delimitators": "",
            "protocol": "HTTP",
            "prefix": "http://localhost:9080/buzzer/", //Retrieve the current bulb state configuration
            "caller":"local", // Remote or Local. The caller variable describes who runs this buffer. Either
            "buffer-tokens":[
            {
                "name":"Get Buzzer output",
                "description":"This output buffer simulates the sounds played by the buzzer",
                "token-type":"string", // What type of token should be fuzzed in this position of the buffer
                "byte-size":256,
                "regex-rule": "[a-z*]", // only option is "state"
                "optional": false 
            }]
        }
        
    }
}
